kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '2'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"api14:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"api14\")].image"}]
    openshift.io/generated-by: OpenShiftNewApp
  resourceVersion: '3986820442'
  name: api14
  uid: 8b60fc08-50be-4578-a306-f55701d0a0a6
  creationTimestamp: '2023-03-28T14:29:47Z'
  generation: 2
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2023-03-28T14:29:47Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"ReplicaFailure"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:unavailableReplicas': {}
      subresource: status
    - manager: oc
      operation: Update
      apiVersion: apps/v1
      time: '2023-03-28T14:29:47Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:image.openshift.io/triggers': {}
            'f:openshift.io/generated-by': {}
          'f:labels':
            .: {}
            'f:app': {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:labels':
                .: {}
                'f:deployment': {}
            'f:spec':
              'f:containers':
                'k:{"name":"api14"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8001,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
    - manager: kubectl-set
      operation: Update
      apiVersion: apps/v1
      time: '2023-03-28T14:29:49Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"api14"}':
                  'f:env':
                    .: {}
                    'k:{"name":"DB_ENDPOINT"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
                    'k:{"name":"DB_NAME"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
                    'k:{"name":"DB_PASS"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
                    'k:{"name":"DB_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
                    'k:{"name":"DB_USER"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:secretKeyRef': {}
  namespace: mas-test
  labels:
    app: api14
    app.kubernetes.io/component: api14
    app.kubernetes.io/instance: api14
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: api14
  template:
    metadata:
      creationTimestamp: null
      labels:
        deployment: api14
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
    spec:
      containers:
        - name: api14
          image: ' '
          ports:
            - containerPort: 8001
              protocol: TCP
          env:
            - name: DB_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-endpoint
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-name
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-pass
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-user
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 2
  unavailableReplicas: 2
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2023-03-28T14:29:47Z'
      lastTransitionTime: '2023-03-28T14:29:47Z'
      reason: NewReplicaSetCreated
      message: Created new replica set "api14-696756bf86"
    - type: Available
      status: 'False'
      lastUpdateTime: '2023-03-28T14:29:47Z'
      lastTransitionTime: '2023-03-28T14:29:47Z'
      reason: MinimumReplicasUnavailable
      message: Deployment does not have minimum availability.
    - type: ReplicaFailure
      status: 'True'
      lastUpdateTime: '2023-03-28T14:29:47Z'
      lastTransitionTime: '2023-03-28T14:29:47Z'
      reason: FailedCreate
      message: >-
        Pod "api14-696756bf86-fc8qw" is invalid: spec.containers[0].image:
        Invalid value: " ": must not have leading or trailing whitespace
